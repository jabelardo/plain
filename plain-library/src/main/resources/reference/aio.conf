aio {

	#
	# Allocations smaller than this will always be done with jvm means and with no pooling.
	#
	too-tiny-to-care-size = 1K
		
	#
	# Used during parsing of medium sized strings, should be between 1K and 4K 
	# This uses direct memory, so eventually you need to play with the jvm direct memory settings to provide more to it.
	#
	tiny-buffer-size = 4K
	
	#
	# Size of a preallocated pool of ByteBuffers with tiny-buffer-size.
	# This uses direct memory, so eventually you need to play with the jvm direct memory settings to provide more to it.
	#
	tiny-buffer-pool-size = 10000
	
	#
	# This size is used for generating internal buffers for asynchronous Io. 
	# Quite a bit of testing made 2K look like a good value. 
	# A size of < 16 is not allowed. Everything < 512 should only be used for testing.
	# If you post/put a lot of entities that are usually bigger (2-64K) you should increase this buffer-size.
	# You should balance this value according to your workload with plain.http.your-server.feature.max-entity-buffer-size.
	#	
	default-buffer-size = 54K
	
	#
	# Size of a preallocated pool of ByteBuffers with default-buffer-size. This should be close to the number of simultaneous connections you expect.
	#
	default-buffer-pool-size = 10000
	
	#
	# Should be large enough to make an SSL packet fit into it. 
	# This uses direct memory, so eventually you need to play with the jvm direct memory settings to provide more to it.
	# A size < 2K is not allowed.
	#
	large-buffer-size = 64K
	
	#
	# Size of a preallocated pool of ByteBuffers with large-buffer-size.
	# This uses direct memory, so eventually you need to play with the jvm direct memory settings to provide more to it.
	#
	large-buffer-pool-size = 1000

	#
	#
	#
	huge-buffer-size = 128K
	
	#
	#
	#
	huge-buffer-pool-size = 1000

	#
	# In LAN and intranet environments 54K (yes, 54) is a good value for socket buffer sizes. Play with it to optimise performance.
	# If you plan to stream a lot of really huge entities (> 1GB) you should increase this eg. to 1M. 
	#
	send-receive-buffer-size = 54K
	
	#
	# Be careful with this one. Default: 0 (leave system default), 1 (set to true), -1 (set to false)
	#
	tcp-no-delay = 0

	#
	# This timeout is applied to asynchronous read/write operations, after this timeout the channel is forced to close and all resources (including poll0 loops, therefore keep it short) should be freed.
	#
	read-write-timeout = 5 seconds
			
	#
	# Close an aio channel connection after this amount of roundtrips in order to avoid stack overflows. 
	#
	max-roundtrips = 1000000
	
}

