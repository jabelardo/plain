#
# reference.conf
#

plain {

	#
	# application root directory at runtime
	#
	home = target/

	#
	# if not set here this will default to 'java.io.tmpdir'
	#
	temp = ${plain.home}/temp
	
	config {

		version = "1.0.1"

		#
		# Very verbose, maybe better to have a look at the JMX management bean's attribute 'configuration'.
		#
		log-config-on-start = off
		
		#
		# If true it should be caught be the application bootstrap and stop the main program.
		#
		rethrow-exception-on-error = on

		print-stacktrace-on-error = off

		#
		# Immediately terminates the jvm, really a last resort.
		#
		terminate-on-error = off
		
		terminate-on-error-exitcode = -1

	}
	
	logging {
	
		level = DEBUG
	
		directory = ${plain.home}/logs
		
		archive= ${plain.logging.directory}/archive
	
		console {
		
			enable = on
			
			pattern = "[%date{yyyyMMddHHmmssSSS}] [%level] [%logger] %msg%n"
		
			# for not redirecting the console to a file set this value to "" or .
			file = ${plain.logging.directory}/console.log
			
			# not implemented
			rolling-pattern = .

		}
		
		text {
		
			enable = off
			
			pattern = "[%date{yyyyMMddHHmmssSSS}] [%level] [%logger] %msg%n"
			
			file = ${plain.logging.directory}/logfile.log
			
			rolling-pattern = ${plain.logging.archive}"/logfile.log.%d{yyyyMMdd}.zip"

		}		
		
		html {
		
			enable = off
			
			# this is very complex and, therefore, set inside logback.xml
			pattern = .
			
			file = ${plain.logging.directory}/logfile.html
			
			rolling-pattern = ${plain.logging.archive}"/logfile.html.%d{yyyyMMdd}.zip"

		}		

		#
		# Add the names of those loggers here that annoy you most with their debug messages.
		#
		filter-debug-names = [
			LocalActorRefProvider			
		]
	
	}
	
	concurrent {
	
		#
		# Give the underlying ActorSystem a name (usually "default"). This name can be used to configure it with an akka configuration.
		#
		actorsystem = default
	
	}
	
	io {

		#
		# This size is used for generating internal buffers for synchronous Io. Quite a bit of testing made 2K look like a good value. 
		#	
		default-buffer-size = 2K
		
		#
		# To make deleteDirectory more robust (retry and pause).
		#
		delete-directory-retries = 5
		
		delete-directory-pause-between-retries = 10 s
	
	}
	
	aio {
	
		#
		# This size is used for generating internal buffers for asynchronous Io. 
		# Quite a bit of testing made 2K look like a good value. 
		# A size of < 16 is not allowed. Everything < 512 should only be used for testing.
		#	
		default-buffer-size = 2K
		
		#
		# Size of a preallocated pool of ByteBuffers with default-buffer-size. This should be close to the number of simultaneous connections you expect.
		#
		default-buffer-pool-size = 10000
		
		#
		# Should be large enough to make an SSL packet fit into it. 
		# This uses direct memory, so eventually you need to play with the jvm direct memory settings to provide more to it.
		# A size < 2K is not allowed.
		#
		large-buffer-size = 16K
		
		#
		# Size of a preallocated pool of ByteBuffers with large-buffer-size.
		# This uses direct memory, so eventually you need to play with the jvm direct memory settings to provide more to it.
		#
		large-buffer-pool-size = 100

		#
		# Used during parsing of smaller strings, should be between 16 and 512 
		# This uses direct memory, so eventually you need to play with the jvm direct memory settings to provide more to it.
		#
		tiny-buffer-size = 128
		
		#
		# Size of a preallocated pool of ByteBuffers with tiny-buffer-size.
		# This uses direct memory, so eventually you need to play with the jvm direct memory settings to provide more to it.
		#
		tiny-buffer-pool-size = 10000
	
	}
	
	json {
	
		#
		# format json in an almost human-readable form, this is expensive, though
		#
		formatted-output = off
	
	}

	xml {
	
		#
		# format xml in a human-readable form, this is an expensive operation
		#
		formatted-output = off
	
	}
	
	monitor {
	
		#
		# When calling shutdown from a monitoring application (eg. jconsole) this token must be given as input to add some extra protection.
		#
		shutdown-token = 1234
		
	}
	
	http {
	
		#
		# Servers listed here will automatically be started and stopped by the bootstrap/teardown mechanism.
		#
		startup-servers = [
		
			plain.http.default-server			
			
			plain.http.monitor-server
		
		]
		
		default-server {
		
			display-name = default
		
			#
			# Valid values are: localhost or "127.0.0.1" or "*" (binds to all local interfaces) or an ip-address of one local interface.
			# "*" does not work equally well on all OS platforms (eg. Linux), it is then best to specify an ip-address directly.
			# Do not forget to put the value in quotes ("") except for localhost. 
			# If a server is bound to a "real" ip-address, you must bind another server to "127.0.0.1" for loop-back, as localhost now points to the "real" ip-address.
			#
			address = "*"
	
			#
			# List all ports you want your server accept connections on. The first port will become the 'load-balancing-port' if load-balancing is enabled.
			# Listing more ports than the number-of-cores - 1 will cause an exception as this would degrade performance drastically. 
			# A reasonable value will be around 1/5 of number-of-cores.
			#
			# Do not forget commas between the port values or they will be interpreted as one string.
			#
			port-range = [ 7500, 7501, 7502 ]
		
			#
			# This value should be close to number of simultaneous connections that you expect at peaks.
			#
			backlog = 10000
			
			#
			# The name of the rest-dispatcher that handles requests and responses on this http server.
			# The default-rest-dispatcher is not really doing a lot except answering 501.
			#
			rest-dispatcher = default-rest-dispatcher
			
			#
			# If not overwritten inside a server configuration this will be the default for all servers.
			#
			feature {
			
				#
				# Set this value to a duration (e.g. 500 milliseconds) if you want to block a server againgst denial of service attacks.
				# For instance, the monitor-server has a pause-between-accept = 500 ms because calling a monitor resource can become extremely expensive
				# and calling it in loops can bring the JVM to a stand-still.
				# Please be aware: Do not set this value to anything > 0 on your API servers, here you want maximum performance.
				# Mixing a positive number for this value with a port-range with load-balancing will through an exception on bootstrap.
				#
				pause-between-accepts = 0

				#
				# On powerful multi-core hardware it could be a bottleneck to accept connections on only one port. Therefore, you can
				# enable load-balancing by listing a port-range with more than one port. By default, the first element of the range
				# will become 'the load-balancing port'. It will respond with a Redirection http response to one of the other ports in the range.
				# Optionally, you can specify the path of the load-balancing mechanism (default: "/") and the path to which clients will 
				# be redirected to (also default: "/"). 
				#				
				load-balancing {
				
					#
					# Setting this to 'on' is only allowed for a port-range with a size > 1. Setting it 'off' for such a port-range will issue a warning on bootstrap.
					#
					enable = on
					
					#
					# Path on which the load-balancing mechanism is implemented.
					#
					balancing-path = /
					
					#
					# Path clients will be redirected to on one of the non-balancing ports of the port-range.
					#
					redirection-path = /
					
				}
				
				#
				# Allow some broken tools to request with version 1.0, but treat the request as if it is version 1.1. Apache benchmark 'ab' is such a f/tool.
				#
				# Careful: Do not put dots (".") into key names.
				#
				allow-version-1-0-but-treat-it-like-1-1 = on
			
				#
				# Enable this feature to allow any (even future) versions, but treat them like version 1.1, of course this might fail due to subsequent protocol errors.
				#
				allow-any-version-but-treat-it-like-1-1 = off
				
				#
				# Setting the default character set to US-ASCII might give a small performance gain. 
				# Names must be valid for java.nio.charset.Charset.forName(). If not specified it defaults to UTF-8.
				#
				default-character-set = UTF-8
				
				#
				# If you are absolutely sure that your http request do not contain url-encoded strings this value can be set to true. This avoids calls to URLDecoder which might result in a performance benefit.  
				# The query part of the request URI will always be url-decoded.
				#
				disable-url-decoding = off
				
			}

		}
		
		#
		# What's not specified a <my-own-name>-server will inherit from the configuration of the default-server.
		#
		monitor-server {
		
			display-name = monitor
			
			address = localhost

			port-range = [ 5757 ]
			
			backlog = 1
			
			feature {
			
				#
				# We do not allow the monitor-server to be called so often as its methods are very expensive.
				#
				pause-between-accepts = 667 milliseconds
				
				load-balancing.enable = off
			
				disable-url-decoding = on

			}
		
		}
		
		#
		# Define your own <my-name>-server in the application.conf or overwrite the default-server.
		#
		
	}

}
