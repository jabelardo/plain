aio {

	#
	# Allocations smaller than this will always be done with jvm means and with no pooling. Also message entities smaller than this value will not be encoded.
	#
	too-tiny-for-encoding-size = 1400
		
	#
	# Used during parsing of medium sized strings, should be between 1K and 4K 
	# This uses direct memory, so eventually you need to play with the jvm direct memory settings to provide more to it.
	#
	tiny-buffer-size = 4K
	
	#
	# Size of a preallocated pool of ByteBuffers with tiny-buffer-size.
	# This uses direct memory, so eventually you need to play with the jvm direct memory settings to provide more to it.
	#
	tiny-buffer-pool-size = 1K
	
	#
	# This size is used for generating internal buffers for asynchronous Io. 
	# Quite a bit of testing made 2K look like a good value. 
	# A size of < 512 is not allowed. Everything < 1K should only be used for testing.
	# If you post/put a lot of entities that are usually bigger (2-64K) you should increase this buffer-size.
	# You should balance this value according to your workload with plain.http.your-server.feature.max-entity-buffer-size.
	# Also, as a recommendation this should be equal to the send-receive-buffer-size.
	#	
	default-buffer-size = 54K
	
	#
	# Size of a preallocated pool of ByteBuffers with default-buffer-size. This should be close to the number of simultaneous connections you expect.
	#
	default-buffer-pool-size = 8K
	
	#
	# Should be large enough to make an SSL packet fit into it. 
	# This uses direct memory, so eventually you need to play with the jvm direct memory settings to provide more to it.
	# A size < 2K is not allowed.
	#
	large-buffer-size = 128K
	
	#
	# Size of a preallocated pool of ByteBuffers with large-buffer-size.
	# This uses direct memory, so eventually you need to play with the jvm direct memory settings to provide more to it.
	#
	large-buffer-pool-size = 1K

	#
	#
	#
	huge-buffer-size = 128K
	
	#
	#
	#
	huge-buffer-pool-size = 1K

	#
	# In LAN and intranet environments 54K (yes, 54) is a good value for socket buffer sizes. 
	# Play with it to optimise performance.
	# If you plan to stream a lot of really huge entities (> 1GB) you should increase this e.g. to 512K. 
	# Setting this to 0 will make the system default to be used.
	# On OSX and localhost a size of 16k leads to connection hangs and extreme slow down (?).
	#
	send-receive-buffer-size = 54K
	
	#
	# Be careful with this one. Default: 0 (leave system default), 1 (set to true), -1 (set to false)
	#
	tcp-no-delay = 0

	#
	# This timeout is applied to asynchronous read/write operations, after this timeout the channel is forced to close and all resources (including poll0 loops, therefore keep it short) should be freed.
	#
	read-write-timeout = 15 seconds
	
	#
	# sub-packages configurations, conduits
	#
	include "aio/conduit.conf"
	
	#
	# client stuff
	#
	include "aio/client.conf"
	
	
	
			
}

